/**
 * Blessing / Wrapper / CSS 3
 *
 * Note:
 * To pass comma-separeted values as a single argument,
 * @x: value1, value2, .. ;
 * .mixin(@x);
 */

#css3 { // Namespace

// Box
.box-sizing(@args) {
	-moz-box-sizing: @args;
	-webkit-box-sizing: @args;
	-o-box-sizing: @args;
	-ms-box-sizing: @args;
	box-sizing: @args;
}
.box-shadow(@args) {
	-moz-box-shadow: @args;
	-webkit-box-shadow: @args;
	-o-box-shadow: @args;
	-ms-box-shadow: @args;
	box-shadow: @args;
}

// Columns
.columns(@args){
	-moz-columns: @args;
	-webkit-columns: @args;
	-o-columns: @args;
	-ms-columns: @args;
	columns: @args;
}
.column-count(@count) {
	-moz-column-count: @count;
	-webkit-column-count: @count;
	-o-column-count: @count;
	-ms-column-count: @count;
	column-count: @count;
}
.column-gap(@gap) {
	-moz-column-gap: @gap;
	-webkit-column-gap: @gap;
	-o-column-gap: @gap;
	-ms-column-gap: @gap;
	column-gap: @gap;
}
.column-width(@width){
	-moz-column-width: @width;
	-webkit-column-width: @width;
	-o-column-width: @width;
	-ms-column-width: @width;
	column-width: @width;
}
/*
.column-rule(@args){
	-moz-column-rule: @rule;
	-webkit-column-rule: @rule;
	-o-column-rule: @rule;
	-ms-column-rule: @rule;
	column-rule: @rule;
}
*/

// Border
.border-radius(@args) {
	-moz-border-radius: @args;
	-webkit-border-radius: @args;
	-o-border-radius: @args;
	-ms-border-radius: @args;
	border-radius: @args;
}

// Animation
.animation(@args) {
	-moz-animation: @args;
	-webkit-animation: @args;
	-o-animation: @args;
	-ms-animation: @args;
	animation: @args;
}
.animation-delay(@delay) {
	-moz-animation-delay: @delay;
	-webkit-animation-delay: @delay;
	-o-animation-delay: @delay;
	-ms-animation-delay: @delay;
	animation-delay: delay;
}
.animation-direction(@direction) {
	-moz-animation-direction: @direction;
	-webkit-animation-direction: @direction;
	-o-animation-direction: @direction;
	-ms-animation-direction: @direction;
	animation-direction: @direction;
}
.animation-duration(@duration) {
	-moz-animation-duration: @duration;
	-webkit-animation-duration: @duration;
	-o-animation-duration: @duration;
	-ms-animation-duration: @duration;
	animation-duration: @duration;
}
.animation-iteration-count(@count) {
	-moz-animation-iteration-count: @count;
	-webkit-animation-iteration-count: @count;
	-o-animation-iteration-count: @count;
	-ms-animation-iteration-count: @count;
	animation-iteration-count: @count;
}
.animation-name(@name) {
	-moz-animation-name: @name;
	-webkit-animation-name: @name;
	-o-animation-name: @name;
	-ms-animation-name: @name;
	animation-name: @name;
}
.animation-play-state(@state) {
	-moz-animation-play-state: @state;
	-webkit-animation-play-state: @state;
	-o-animation-play-state: @state;
	-ms-animation-play-state: @state;
	animation-play-state: @state;
}
.animation-timing-function(@function) {
	-moz-animation-timing-function: @function;
	-webkit-animation-timing-function: @function;
	-o-animation-timing-function: @function;
	-ms-animation-timing-function: @function;
	animation-timing-function: @function;
}

// Background
.background-size(@args) {
	-moz-background-size: @args;
	-webkit-background-size: @args;
	-o-background-size: @args;
	-ms-background-size: @args;
	background-size: @args;
}
.background-clip(@args) {
	-moz-background-clip: @args;
	-webkit-background-clip: @args;
	-o-background-clip: @args;
	-ms-background-clip: @args;
	background-clip: @args;
}
.background-image_linear-gradient(@args, @rest...) {
	@x: ~`"@{arguments}".slice(1, -1)`; // Remove "[" and "]" from @arguments
	background-image: -moz-linear-gradient(@x);
	background-image: -webkit-linear-gradient(@x);
	background-image: -o-linear-gradient(@x);
	background-image: -ms-linear-gradient(@x);
	background-image: linear-gradient(@x);
}
.background-image(linear-gradient, @rest...) { // "@_" matches any value
	@x: ~`"@{arguments}".slice(1, -1)`; // Remove "[" and "]" from @arguments
	background-image: -moz-linear-gradient(@x);
	background-image: -webkit-linear-gradient(@x);
	background-image: -o-linear-gradient(@x);
	background-image: -ms-linear-gradient(@x);
	background-image: linear-gradient(@x);
}

// Opacity
.opacity(@arg) {
	-moz-opacity: @arg;
	-webkit-opacity: @arg;
	-o-opacity: @arg;
	-ms-behavior: url("@{lib-url}/pie/PIE.htc");
	opacity: @arg;
}
.opacity(@arg)
		when(@compat >= @compat-ie8) {
	@x: @arg * 100;
	-ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{x})";
}
.opacity(@arg)
		when(@compat >= @compat-ie7) { // For IE 5 - 7
	filter: ~"alpha(" @arg * 100 ~")";
}

// Text Shadow
.text-shadow(@args) {
	-moz-text-shadow: @args;
	-webkit-text-shadow: @args;
	-o-text-shadow: @args;
	-ms-text-shadow: @args;
	text-shadow: @args;
}

// Transform
.transform(@args) {
	-moz-transform: @args; 
	-webkit-transform: @args; 
	-o-transform: @args; 
	-ms-transform: @args; 
	transform: @args;
}

// Transition
.transition(@args) {
	-moz-transition: @args;
	-webkit-transition: @args;
	-o-transition: @args;
	-ms-transition: @args;
	transition: @args;
}
.transition-delay(@delay) {
	-moz-transition-delay: @delay;
	-webkit-transition-delay: @delay;
	-o-transition-delay: @delay;
	-ms-transition-delay: @delay;
	transition-delay: @delay;
}
.transition-duration(@duration) {
	-moz-transition-duration: @duration;
	-webkit-transition-duration: @duration;
	-o-transition-duration: @duration;
	-ms-transition-duration: @duration;
	transition-duration: @duration;
}
.transition-property(@property) {
	-moz-transition-property: @property;
	-webkit-transition-property: @property;
	-o-transition-property: @property;
	-ms-transition-property: @property;
	transition-property: @property;
}
.transition-timing-function(@function) {
	-moz-transition-timing-function: @function;
	-webkit-transition-timing-function: @function;
	-o-transition-timing-function: @function;
	-ms-transition-timing-function: @function;
	transition-timing-function: @function;
}

}
