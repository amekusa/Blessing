/**
 * Blessing / Methods
 */

@import "variables.less";
@import "methods.wrapper.less";

.origin() {
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
}

.pos(@x; @y; @from: lt; @method: @empty; @z: @empty) {
	
	& when (@from = lt), (@from = left-top), (@from = l), (@from = left), (@from = t), (@from = top) {
		left: @x;
		top: @y;
	}
	
	& when (@from = rt), (@from = right-top), (@from = r), (@from = right) {
		right: @x;
		top: @y;
	}
	
	& when (@from = lb), (@from = left-bottom), (@from = b), (@from = bottom) {
		left: @x;
		bottom: @y;
	}
	
	& when (@from = rb), (@from = right-bottom) {
		right: @x;
		bottom: @y;
	}
	
	& when not (@method = @empty) {
		position: @method;
	}
	
	& when not (@z = @empty) {
		z-index: @z;
	}
}

.dim(@w; @h) {
	width: @w;
	height: @h;
}
.dim(@wh) {
	width: @wh;
	height: @wh;
}

.mgn-x(@l; @r) {
	margin-left: @l;
	margin-right: @r;
}
.mgn-x(@lr) {
	.mgn-x(@lr; @lr);
}

.mgn-y(@t; @b) {
	margin-top: @t;
	margin-bottom: @b;
}
.mgn-y(@tb) {
	.mgn-y(@tb; @tb);
}

.align(@to; @offset: 0) {
	
	& when (@to = l), (@to = left) {
		.mgn-x(@offset; auto);
	}
	
	& when (@to = r), (@to = right) {
		.mgn-x(auto; @offset);
	}
	
	& when (@to = c), (@to = center) {
		.mgn-x(auto);
	}
}

.pad-x(@l, @r) {
	padding-left: @l;
	padding-right: @r;
}
.pad-x(@lr) {
	.pad-x(@lr, @lr);
}

.pad-y(@t, @b) {
	padding-top: @t;
	padding-bottom: @b;
}
.pad-y(@tb) {
	.pad-y(@tb, @tb);
}

.bdr-x(@l, @r) {
	border-left: @l;
	border-right: @r;
}
.bdr-x(@lr) {
	.bdr-x(@lr, @lr);
}

.bdr-y(@t, @b) {
	border-top: @t;
	border-bottom: @b;
}
.bdr-y(@tb) {
	.bdr-y(@tb, @tb);
}

.bdr-x-width(@l, @r) {
	border-left-width: @l;
	border-right-width: @r;
}
.bdr-x-width(@lr) {
	.bdr-x-width(@lr, @lr);
}

.bdr-y-width(@t, @b) {
	border-top-width: @t;
	border-bottom-width: @b;
}
.bdr-y-width(@tb) {
	.bdr-y-width(@tb, @tb);
}

.bdr-x-style(@l, @r) {
	border-left-style: @l;
	border-right-style: @r;
}
.bdr-x-style(@lr) {
	.bdr-x-style(@lr, @lr);
}

.bdr-y-style(@t, @b) {
	border-top-style: @t;
	border-bottom-style: @b;
}
.bdr-y-style(@tb) {
	.bdr-y-style(@tb, @tb);
}

.bdr-x-color(@l, @r) {
	border-left-color: @l;
	border-right-color: @r;
}
.bdr-x-color(@lr) {
	.bdr-x-color(@lr, @lr);
}

.bdr-y-color(@t, @b) {
	border-top-color: @t;
	border-bottom-color: @b;
}
.bdr-y-color(@tb) {
	.bdr-y-color(@tb, @tb);
}

.nake() {
	margin: 0;
	padding: 0;
	border-width: 0;
}

.nake-x() {
	.mgn-x(0);
	.pad-x(0);
	.bdr-x-width(0);
}

.nake-y() {
	.mgn-y(0);
	.pad-y(0);
	.bdr-y-width(0);
}

//// Complex layout methods

.vertical-centered-block(@-height) {
	display: block;
	position: absolute;
	height: @-height;
}
.vertical-centered-block(@-height) when (ispercentage(@-height)) { // For flexible height
	top: (100 - @-height) / 2;
}
.vertical-centered-block(@-height) when not (ispercentage(@-height)) { // For fixed height
	top: 50%;
	margin-top: -(@-height / 2);
}

//// Other utilities

.layer(@-z-index: auto) {
	display: block;
	position: absolute;
	z-index: @-z-index;
	.origin;
	.dim(100%);
	.nake;
	#css3 > .box-sizing(border-box);
}

.clipper() {
	display: block;
	overflow: hidden;
	white-space: nowrap;
}

.layouter() {
	position: relative;
	
	> * {
		position: absolute;
	}
}
.layouter {.layouter}

.l-aligner {
	text-align: left;
	
	* {
		
	}
}

.r-aligner {
	text-align: right;
}

.c-aligner {
	text-align: center;
}

.block,
.l-aligned-block,
.r-aligned-block,
.c-aligned-block {
	display: block;
}

.l-aligner *,
.l-aligned-block {
	margin-left: 0;
	margin-right: auto;
}

.r-aligner *,
.r-aligned-block {
	margin-left: auto;
	margin-right: 0;
}

.c-aligner *,
.c-aligned-block {
	margin-left: auto;
	margin-right: auto;
}

.stretcher *,
.h-stretcher *,
.v-stretcher * {
	display: block;
	padding: 0;
}

.stretcher * {
	width: 100%;
	height: 100%;
}

.h-stretcher * {
	width: 100%;
	max-height: 100%;
}

.v-stretcher * {
	max-width: 100%;
	height: 100%;
}

img.inline {
	display: inline;
	vertical-align: middle;
}


.showcase {
	> .content {
		display: block;
		.align(c);
	}
	
	> p.caption {
		text-align: center;
	}
}


ul.menu, ol.menu { // Simple menu
	
	> li { // Menu item
	}
}

dl.menu {
	
	> dt {
	}
	
	> dd {
	}
}


p.short {
	white-space: nowrap;
}


.script-required {
	position: relative;
	
	&.unavailable {
		visibility: hidden;
	}
	
	> noscript.alt {
		//.layer(auto);
	}
}


.indent(@-amount: 4em) {

}

.indent {
	.indent;
}

.no-wrap() {
	overflow: visible;
	white-space: nowrap;
}

@import "methods.division.less";
@import "methods.gui.less";
@import "methods.sfx.less";
@import "methods.component.less";
@import "methods.development.less";

/* END Blessing / Methods
 **/